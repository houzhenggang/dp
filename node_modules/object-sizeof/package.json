{
  "name": "object-sizeof",
  "version": "0.1.2",
  "description": "Sizeof of a JavaScript object in bytes",
  "main": "index.js",
  "scripts": {
    "test": "mocha -R tap"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/avrora/sizeof.git"
  },
  "keywords": [
    "sizeof",
    "size",
    "object",
    "bytes"
  ],
  "author": {
    "name": "Andrei Karpushonak"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "lodash": "~2.4.1"
  },
  "devDependencies": {
    "mocha": "~1.19.0",
    "should": "~3.3.1"
  },
  "readme": "## object-sizeof\n\n[![Build Status](https://travis-ci.org/avrora/sizeof.svg?branch=master)](https://travis-ci.org/avrora/sizeof) [![Dependency Status](https://david-dm.org/avrora/sizeof.svg)](https://david-dm.org/avrora/sizeof)\n\n[![NPM](https://nodei.co/npm/object-sizeof.png?downloads=true&stars=true)](https://nodei.co/npm/object-sizeof/)\n\n### Get size of a JavaScript object in bytes\n\nJavaScript does not provide sizeof (like in C), and programmer does not need to care about memory allocation/deallocation. \n\nHowever, according to [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/), each String value is represented by 16-bit unsigned integer, Number uses  the double-precision 64-bit format IEEE 754 values including the special \"Not-a-Number\" (NaN) values, positive infinity, and negative infinity.\n\nHaving this knowledge, the module calculates how much memory object will allocate. \n\n### Limitations\nPlease note, that V8 which compiles the JavaScript into native machine code, is not taken into account, as the compiled code is additionally heavily optimized. \n\n### Installation\n\n`npm install object-sizeof`\n\n### Examples\n\n```javascript\n  var sizeof = require('object-sizeof');\n  \n  // 2B per character, 6 chars total => 12B\n  console.log(sizeof({abc: 'def'}));\n  \n  // 8B for Number => 8B\n  console.log(sizeof(12345);\n  \n  var param = { \n    'a': 1, \n    'b': 2, \n    'c': {\n      'd': 4\n    }\n  };\n  // 4 one two-bytes char strings and 3 eighth-bytes numbers => 32B\n  console.log(sizeof(param));\n\n```\n\n### Licence\n\nThe MIT License (MIT)\n\nCopyright (c) 2014, Andrei Karpushonak aka @miktam, http://avrora.io",
  "bugs": {
    "url": "https://github.com/avrora/sizeof/issues"
  },
  "homepage": "https://github.com/avrora/sizeof",
  "_id": "object-sizeof@0.1.2",
  "dist": {
    "shasum": "0ef995413352554acad0ac1c2da4e79d93ff6669"
  },
  "_from": "object-sizeof@",
  "_resolved": "https://registry.npmjs.org/object-sizeof/-/object-sizeof-0.1.2.tgz"
}
